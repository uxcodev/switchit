{"ast":null,"code":"let api = {\n  async getPsd2Institutions() {\n    // let token = localStorage.getItem('switchit_token');\n    // console.log(`getUsers token: ${token}`)\n\n    try {\n      const options = {\n        method: \"GET\",\n        headers: {\n          accept: \"application/json\"\n          // authorization: `Bearer ${token}`,\n        }\n      };\n\n      let url = \"https://switchitapi.azurewebsites.net/api/v1/\";\n      const response = await fetch(`${url}/psd2Institutions`, options);\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n  },\n  async createToken(email) {\n    try {\n      // create JWT token in backend\n\n      let body = {\n        email: email\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      let url = process.env.VUE_APP_API_URL;\n      const response = await fetch(`${url}/users/create-token`, options);\n      const data = await response.json();\n\n      // save the token in local storage\n\n      localStorage.setItem('switchit_token', data.token);\n      return data.token;\n    } catch (err) {\n      console.error(err);\n    }\n  },\n  async getUsers() {\n    let token = localStorage.getItem('switchit_token');\n\n    // console.log(`getUsers token: ${token}`)\n\n    try {\n      const options = {\n        method: \"GET\",\n        headers: {\n          accept: \"application/json\",\n          authorization: `Bearer ${token}`\n        }\n      };\n      let url = process.env.VUE_APP_API_URL;\n      const response = await fetch(`${url}/users/get-users`, options);\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n    return true;\n  },\n  async updateUser(id, fields) {\n    try {\n      let token = localStorage.getItem('switchit_token');\n      let body = {\n        id: id,\n        fields: fields\n      };\n      const options = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(body)\n      };\n      let url = process.env.VUE_APP_API_URL;\n      const response = await fetch(`${url}/users/update-user`, options);\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n  },\n  async signupCompany(fields) {\n    try {\n      let token = localStorage.getItem('switchit_token');\n      console.log('fields');\n      console.log(fields);\n      let body = {\n        fields: fields\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(body)\n      };\n      let url = process.env.VUE_APP_API_URL;\n      const response = await fetch(`${url}/companies/signup-company`, options);\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["api","getPsd2Institutions","options","method","headers","accept","url","response","fetch","data","json","err","console","error","createToken","email","body","JSON","stringify","process","env","VUE_APP_API_URL","localStorage","setItem","token","getUsers","getItem","authorization","updateUser","id","fields","signupCompany","log"],"sources":["/Users/nick/Sites/switchit/vue/src/api/switchit.js"],"sourcesContent":["let api = {\n\n  async getPsd2Institutions() {\n    // let token = localStorage.getItem('switchit_token');\n    // console.log(`getUsers token: ${token}`)\n\n    try {\n      const options = {\n        method: \"GET\",\n        headers: {\n          accept: \"application/json\",\n          // authorization: `Bearer ${token}`,\n        },\n      };\n\n      let url = \"https://switchitapi.azurewebsites.net/api/v1/\"\n      const response = await fetch(\n        `${url}/psd2Institutions`,\n        options\n      );\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n  },\n\n\n  async createToken(email) {\n\n    try {\n\n      // create JWT token in backend\n\n      let body = {\n        email: email\n      }\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(body)\n      }\n\n      let url = process.env.VUE_APP_API_URL\n      const response = await fetch(\n        `${url}/users/create-token`,\n        options\n      )\n      const data = await response.json();\n\n      // save the token in local storage\n\n      localStorage.setItem('switchit_token', data.token)\n      return data.token;\n\n    } catch (err) {\n      console.error(err);\n    }\n  },\n\n  async getUsers() {\n    let token = localStorage.getItem('switchit_token');\n\n    // console.log(`getUsers token: ${token}`)\n\n    try {\n      const options = {\n        method: \"GET\",\n        headers: {\n          accept: \"application/json\",\n          authorization: `Bearer ${token}`,\n        },\n      };\n\n      let url = process.env.VUE_APP_API_URL\n      const response = await fetch(\n        `${url}/users/get-users`,\n        options\n      );\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n    return true\n  },\n\n  async updateUser(id, fields) {\n    try {\n      let token = localStorage.getItem('switchit_token');\n      let body = {\n        id: id,\n        fields: fields\n      }\n      const options = {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(body)\n      }\n\n      let url = process.env.VUE_APP_API_URL\n      const response = await fetch(\n        `${url}/users/update-user`,\n        options\n      )\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n  },\n\n  async signupCompany(fields) {\n    try {\n      let token = localStorage.getItem('switchit_token');\n\n      console.log('fields')\n      console.log(fields)\n\n      let body = {\n        fields: fields\n      }\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify(body)\n      }\n\n      let url = process.env.VUE_APP_API_URL\n      const response = await fetch(\n        `${url}/companies/signup-company`,\n        options\n      )\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error(err);\n    }\n  },\n\n}\n\nexport default api\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}