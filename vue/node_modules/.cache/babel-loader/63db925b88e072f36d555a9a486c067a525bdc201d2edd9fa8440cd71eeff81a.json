{"ast":null,"code":"import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock, resolveComponent as _resolveComponent, withCtx as _withCtx, createCommentVNode as _createCommentVNode, KeepAlive as _KeepAlive, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-56a0b5ae\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main settings\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ModalWindow = _resolveComponent(\"ModalWindow\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.modalComponent ? (_openBlock(), _createBlock(_component_ModalWindow, {\n    key: 0,\n    component: $data.modalComponent,\n    onCloseModal: $options.closeModal\n  }, {\n    default: _withCtx(() => [(_openBlock(), _createBlock(_resolveDynamicComponent($data.modalComponent)))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"component\", \"onCloseModal\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(), _createBlock(_KeepAlive, null, [_ctx.$auth0.isAuthenticated.value ? (_openBlock(), _createBlock(_resolveDynamicComponent($data.screen), {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true)], 1024 /* DYNAMIC_SLOTS */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EAIOA,KAAK,EAAC;AAAe;;;6DAHPC,oBAAc,kBAAjCC,aAEcC;;IAFsBC,SAAS,EAAEH,oBAAc;IAAGI,YAAU,EAAEC;;sBAC1E,MAA4C,gBAA5CJ,aAA4CK,yBAA5BN,oBAAc;;yFAEhCO,oBAIM,OAJNC,UAIM,kBAHJP,aAEaQ,mBADMC,WAAM,CAACC,eAAe,CAACC,KAAK,kBAA7CX,aAAwEK,yBAApBN,YAAM;IAAAa;EAAA","names":["class","$data","_createBlock","_component_ModalWindow","component","onCloseModal","$options","_resolveDynamicComponent","_createElementVNode","_hoisted_1","_KeepAlive","_ctx","isAuthenticated","value","key"],"sourceRoot":"","sources":["/Users/nick/Sites/switchit/vue/src/pages/AdminDashboard.vue"],"sourcesContent":["<template>\n  <ModalWindow v-if=\"modalComponent\" :component=\"modalComponent\" @closeModal=\"closeModal\">\n    <component :is=\"modalComponent\"></component>\n  </ModalWindow>\n  <div class=\"main settings\">\n    <keep-alive>\n      <component v-if=\"$auth0.isAuthenticated.value\" :is=\"screen\"></component>\n    </keep-alive>\n  </div>\n</template>\n<script>\n\nimport ModalWindow from '@/components/ui/ModalWindow.vue';\nimport UserTable from './UserTable.vue';\n\nexport default {\n  components: {\n    ModalWindow,\n    UserTable,\n  },\n  data() {\n    return {\n      modalComponent: null,\n      screen: 'UserTable',\n    }\n  },\n  methods: {\n    closeModal() {\n      this.modalComponent = null\n    },\n    openModal(component) {\n      this.modalComponent = component\n    },\n    changePage(page) {\n      this.screen = page\n    }\n  },\n  async mounted() {\n  }\n}\n</script>\n\n<style lang=\"sass\" scoped>\n.main\n  display: flex\n  justify-content: center\n\n  background: #F5F5F5\n  min-height: 100vh\n  padding: 100px 40px\n  top: 80px\n@import \"/src/styles/variables.sass\"\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}