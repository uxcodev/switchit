{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport MainNav from \"@/components/layout/MainNav.vue\";\nimport api from \"@/api/switchit\";\nimport jwt_decode from \"jwt-decode\";\nimport { decode } from \"punycode\";\nexport default {\n  components: {\n    MainNav\n  },\n  name: \"App\",\n  data() {\n    return {\n      auth0User: this.$auth0.user,\n      user: () => {\n        this.$store.getters.user;\n      }\n    };\n  },\n  watch: {\n    async auth0User(auth0User) {\n      if (auth0User) {\n        // create token on backend from logged in email\n        // this also checks switchit db for a user, and\n        // returns the user info in the token\n\n        let token = await api.createToken(auth0User.email);\n\n        // get the user info from the returned token and\n        // save it in VueX\n\n        let decodedToken = await jwt_decode(token);\n        await this.$store.dispatch('setUser', decodedToken.user);\n        if (decodedToken.user === null) {\n          this.$router.push({\n            path: '/onboarding'\n          });\n        }\n        console.log('decodedToken.user');\n        console.log(decodedToken.user);\n        if (decodedToken.user) {\n          this.$store.dispatch('isAdmin', decodedToken.user.admin);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAWA,OAAOA,OAAM,MAAO,iCAAiC;AACrD,OAAOC,GAAE,MAAO,gBAAgB;AAChC,OAAOC,UAAS,MAAO,YAAY;AACnC,SAASC,MAAK,QAAS,UAAU;AAEjC,eAAe;EACbC,UAAU,EAAE;IACVJ;EACF,CAAC;EACDK,IAAI,EAAE,KAAK;EACXC,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,IAAI,CAACC,MAAM,CAACC,IAAI;MAC3BA,IAAI,EAAE,MAAM;QAAE,IAAI,CAACC,MAAM,CAACC,OAAO,CAACF,IAAG;MAAE;IACzC,CAAC;EACH,CAAC;EACDG,KAAK,EAAE;IACL,MAAML,SAAS,CAACA,SAAS,EAAE;MACzB,IAAIA,SAAS,EAAE;QAEb;QACA;QACA;;QAEA,IAAIM,KAAI,GAAI,MAAMZ,GAAG,CAACa,WAAW,CAACP,SAAS,CAACQ,KAAK;;QAEjD;QACA;;QAEA,IAAIC,YAAW,GAAI,MAAMd,UAAU,CAACW,KAAK;QAEzC,MAAM,IAAI,CAACH,MAAM,CAACO,QAAQ,CAAC,SAAS,EAAED,YAAY,CAACP,IAAI;QAEvD,IAAIO,YAAY,CAACP,IAAG,KAAM,IAAI,EAAE;UAC9B,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAc,CAAC;QAC3C;QACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB;QAC/BD,OAAO,CAACC,GAAG,CAACN,YAAY,CAACP,IAAI;QAC7B,IAAIO,YAAY,CAACP,IAAI,EAAE;UACrB,IAAI,CAACC,MAAM,CAACO,QAAQ,CAAC,SAAS,EAAED,YAAY,CAACP,IAAI,CAACc,KAAK;QACzD;MACF;IACF;EACF;AACF,CAAC","names":["MainNav","api","jwt_decode","decode","components","name","data","auth0User","$auth0","user","$store","getters","watch","token","createToken","email","decodedToken","dispatch","$router","push","path","console","log","admin"],"sourceRoot":"","sources":["/Users/nick/Sites/switchit-vue/src/App.vue"],"sourcesContent":["<template>\n  <MainNav />\n  <div id=\"app\">\n    <router-view></router-view>\n    <!-- <div class=\"main\">\n      Waiting for authorization...\n    </div> -->\n  </div>\n</template>\n\n<script>\nimport MainNav from \"@/components/layout/MainNav.vue\";\nimport api from \"@/api/switchit\";\nimport jwt_decode from \"jwt-decode\";\nimport { decode } from \"punycode\";\n\nexport default {\n  components: {\n    MainNav,\n  },\n  name: \"App\",\n  data() {\n    return {\n      auth0User: this.$auth0.user,\n      user: () => { this.$store.getters.user }\n    };\n  },\n  watch: {\n    async auth0User(auth0User) {\n      if (auth0User) {\n\n        // create token on backend from logged in email\n        // this also checks switchit db for a user, and\n        // returns the user info in the token\n\n        let token = await api.createToken(auth0User.email)\n\n        // get the user info from the returned token and\n        // save it in VueX\n\n        let decodedToken = await jwt_decode(token)\n\n        await this.$store.dispatch('setUser', decodedToken.user)\n\n        if (decodedToken.user === null) {\n          this.$router.push({ path: '/onboarding' })\n        }\n        console.log('decodedToken.user')\n        console.log(decodedToken.user)\n        if (decodedToken.user) {\n          this.$store.dispatch('isAdmin', decodedToken.user.admin)\n        }\n      }\n    }\n  },\n};\n</script>\n\n<style lang=\"sass\">\n@import \"/src/styles/styles.sass\"\n\n\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}