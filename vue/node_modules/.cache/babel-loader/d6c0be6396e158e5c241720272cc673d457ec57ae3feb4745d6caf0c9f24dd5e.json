{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-74b7f7c7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"sidebar-content\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Filter opportunities\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"checkboxes\"\n};\nconst _hoisted_4 = {\n  class: \"checkbox-label\"\n};\nconst _hoisted_5 = [\"onUpdate:modelValue\", \"id\"];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"checkmark\"\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['sidebar', $options.isOpen ? '' : 'sidebar-hidden'])\n  }, [_createElementVNode(\"div\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeModal && $options.closeModal(...args)),\n    class: \"close material-symbols-outlined\"\n  }, \" close \"), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, category => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: category,\n      class: \"checkbox\"\n    }, [_createElementVNode(\"label\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": $event => category.selected = $event,\n      type: \"checkbox\",\n      id: category.name\n    }, null, 8 /* PROPS */, _hoisted_5), [[_vShow, false], [_vModelCheckbox, category.selected]]), _hoisted_6, _createTextVNode(_toDisplayString(category.name), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 2 /* CLASS */);\n}","map":{"version":3,"mappings":";;;EAKSA,KAAK,EAAC;AAAiB;gEAC1BC,oBAA6B,YAAzB,sBAAoB;;EACnBD,KAAK,EAAC;AAAY;;EAEZA,KAAK,EAAC;AAAgB;;gEAE3BC,oBAA+B;EAAzBD,KAAK,EAAC;AAAW;;;uBAVjCE,oBAeI;IAfEF,KAAK,8BAAcG,eAAM;MAC7BF,oBAEM;IAFAG,OAAK,yCAAED,mDAAU;IAAEH,KAAK,EAAC;KAAkC,SAEjE,GACAC,oBAUM,OAVNI,UAUM,GATJC,UAA6B,EAC7BL,oBAOM,OAPNM,UAOM,sBANJL,oBAKMM,6BALkBC,gBAAU,EAAtBC,QAAQ;yBAApBR,oBAKM;MAL+BS,GAAG,EAAED,QAAQ;MAAEV,KAAK,EAAC;QACxDC,oBAGQ,SAHRW,UAGQ,mBAFNX,oBAAwF;uCAAzDS,QAAQ,CAACG,QAAQ;MAAEC,IAAI,EAAC,UAAU;MAAEC,EAAE,EAAEL,QAAQ,CAACM;mDAAjE,KAAK,qBAAWN,QAAQ,CAACG,QAAQ,KAChDI,UAA+B,oCAAGP,QAAQ,CAACM,IAAI","names":["class","_createElementVNode","_createElementBlock","$options","onClick","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","$data","category","key","_hoisted_4","selected","type","id","name","_hoisted_6"],"sourceRoot":"","sources":["/Users/nick/Sites/switchit/vue/src/components/layout/SideBar.vue"],"sourcesContent":["<template>\n  <div :class=\"['sidebar', isOpen ? '' : 'sidebar-hidden']\">\n    <div @click=\"closeModal\" class=\"close material-symbols-outlined\">\n      close\n    </div>\n    <div class=\"sidebar-content\">\n      <h1>Filter opportunities</h1>\n      <div class=\"checkboxes\">\n        <div v-for=\"category in categories\" :key=\"category\" class=\"checkbox\">\n          <label class=\"checkbox-label\">\n            <input v-show=\"false\" v-model=\"category.selected\" type=\"checkbox\" :id=\"category.name\" />\n            <span class=\"checkmark\"></span>{{ category.name }}\n          </label>\n        </div>\n      </div>\n    </div>\n</div>\n</template>\n\n<script>\nexport default {\n  name: \"TheSidebar\",\n\n  data() {\n    return {\n      isDisabled: true,\n      categories: [\n        { name: 'Mortgage', selected: true, icon: 'house' },\n        { name: 'Insurance', selected: true },\n        { name: 'Banking', selected: true }\n      ]\n    };\n  },\n  computed: {\n    isOpen() {\n      return this.$store.getters.isOpen;\n    },\n  },\n  methods: {\n    closeModal() {\n      this.$store.dispatch('closeMenu')\n    }\n  },\n};\n</script>\n\n<style lang=\"sass\" scoped>\n@import \"/src/styles/styles.sass\"\n\n// TRANSITIONS\n$transition-sidebar: .2s ease-in-out\n\n.sidebar\n  position: fixed\n  top: 0\n  right: 0\n  opacity: 1\n  visibility: visible\n  width: 520px\n  max-width: 95%\n  height: 100%\n  transition: $transition-sidebar\n  box-shadow: rgba(0, 0, 0, 0.1) -10px 0 10px\n  z-index: 99\n  padding: 20px\n  background-color: $blue-grey-700-color\n  color: rgba(255, 255, 255, .8)\n\n  .close\n    cursor: pointer\n    position: absolute\n    top: 20px\n    right: 20px\n    // align-self: flex-end\n\n  &-hidden\n    transform: translateX(300px)\n    opacity: 0\n    visibility: hidden\n\n  &-content\n    display: flex\n    flex-direction: column\n    flex-basis: auto\n    flex-wrap: nowrap\n    height: 100%\n    min-height: 100%\n    padding: 30px\n\n    ul\n      li, a, div\n        color: inherit\n        margin: 8px 0\n        list-style: none\n        text-decoration: none\n        cursor: pointer\n\n      .active\n        color: #03D0BF\n\n    select\n      color: inherit\n      font-size: inherit\n      font-weight: inherit\n      text-transform: uppercase\n      padding: 2px 4px\n\n  .checkboxes\n    display: flex\n    flex-direction: column\n    gap:16px\n    .checkbox\n      .checkmark\n        transform: scale(0.75)\n      \n      \n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}