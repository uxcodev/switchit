{"ast":null,"code":"import memberstackDOM from \"@memberstack/dom\";\nexport default {\n  state() {\n    return {\n      isLoggedIn: null,\n      isAuthenticated: null,\n      memberstack: null,\n      member: null\n    };\n  },\n  mutations: {\n    setMemberstack(state, payload) {\n      state.memberstack = payload.val;\n    },\n    setLoggedIn(state, payload) {\n      state.isLoggedIn = payload.val;\n    },\n    setMember(state, payload) {\n      state.member = payload.val;\n    }\n  },\n  actions: {\n    async initMemberstack(context) {\n      let memberstack = await memberstackDOM.init({\n        publicKey: \"pk_sb_84e3a7dacbc6b7fff518\",\n        sessionDurationDays: 7,\n        appId: \"app_cld3n4neu000d0tltc0iugvud\"\n      });\n      context.commit('setMemberstack', {\n        val: memberstack\n      });\n      let member = await memberstack.getCurrentMember();\n      if (member.data) {\n        context.commit('setMember', {\n          val: member.data\n        });\n        context.commit('setLoggedIn', {\n          val: true\n        });\n      } else {\n        this.dispatch('login');\n      }\n    },\n    async login(context) {\n      let response = await this.getters.memberstack.openModal(\"LOGIN\", {\n        signup: {\n          plans: [\"pln_switchit-admin-3re0t6w\"]\n        }\n      });\n      let member = response.data.member;\n      context.commit('setMember', {\n        val: member.data\n      });\n      context.commit('setLoggedIn', {\n        val: true\n      });\n      this.getters.memberstack.hideModal();\n    },\n    async logout(context) {\n      let response = await this.getters.memberstack.logout();\n      if (response.data) {\n        context.commit('setLoggedIn', {\n          val: false\n        });\n        context.commit('setMember', {\n          val: null\n        });\n        context.commit('setMemberstack', {\n          val: null\n        });\n      }\n      this.dispatch('login');\n    },\n    async signup(context) {\n      let member = await this.getters.memberstack.openModal(\"SIGNUP\", {\n        signup: {\n          plans: [\"pln_switchit-admin-3re0t6w\"]\n        }\n      });\n      context.commit('setMember', {\n        val: member.data\n      });\n      context.commit('setLoggedIn', {\n        val: true\n      });\n    }\n  },\n  getters: {\n    isAuthenticated(state) {\n      return state.isAuthenticated;\n    },\n    memberstack(state) {\n      return state.memberstack;\n    },\n    member(state) {\n      return state.member;\n    },\n    isLoggedIn(state) {\n      return state.isLoggedIn;\n    }\n  }\n};","map":{"version":3,"names":["memberstackDOM","state","isLoggedIn","isAuthenticated","memberstack","member","mutations","setMemberstack","payload","val","setLoggedIn","setMember","actions","initMemberstack","context","init","publicKey","sessionDurationDays","appId","commit","getCurrentMember","data","dispatch","login","response","getters","openModal","signup","plans","hideModal","logout"],"sources":["/Users/nick/Sites/switchit-vue/src/store/memberstack.js"],"sourcesContent":["\nimport memberstackDOM from \"@memberstack/dom\";\n\nexport default {\n  state() {\n    return {\n      isLoggedIn: null,\n      isAuthenticated: null,\n      memberstack: null,\n      member: null,\n    };\n  },\n  mutations: {\n    setMemberstack(state, payload) {\n      state.memberstack = payload.val;\n    },\n    setLoggedIn(state, payload) {\n      state.isLoggedIn = payload.val;\n    },\n    setMember(state, payload) {\n      state.member = payload.val;\n    },\n\n  },\n  actions: {\n    async initMemberstack(context) {\n      let memberstack = await memberstackDOM.init({\n        publicKey: \"pk_sb_84e3a7dacbc6b7fff518\",\n        sessionDurationDays: 7,\n        appId: \"app_cld3n4neu000d0tltc0iugvud\"\n      });\n      context.commit('setMemberstack', { val: memberstack });\n\n      let member = await memberstack.getCurrentMember();\n      if (member.data) {\n        context.commit('setMember', { val: member.data })\n        context.commit('setLoggedIn', { val: true });\n      } else {\n        this.dispatch('login')\n      }\n    },\n    async login(context) {\n      let response = await this.getters.memberstack.openModal(\"LOGIN\", {\n        signup: {\n          plans: [\"pln_switchit-admin-3re0t6w\"]\n        }\n      });\n      let member = response.data.member;\n      context.commit('setMember', { val: member.data })\n      context.commit('setLoggedIn', { val: true });\n      this.getters.memberstack.hideModal();\n\n    },\n    async logout(context) {\n      let response = await this.getters.memberstack.logout()\n      if (response.data) {\n        context.commit('setLoggedIn', { val: false });\n        context.commit('setMember', { val: null })\n        context.commit('setMemberstack', { val: null })\n\n      }\n      this.dispatch('login')\n    },\n    async signup(context) {\n      let member = await this.getters.memberstack.openModal(\"SIGNUP\", {\n        signup: {\n          plans: [\"pln_switchit-admin-3re0t6w\"]\n        }\n      });\n      context.commit('setMember', { val: member.data })\n      context.commit('setLoggedIn', { val: true });\n    },\n  },\n  getters: {\n    isAuthenticated(state) {\n      return state.isAuthenticated;\n    },\n    memberstack(state) {\n      return state.memberstack;\n    },\n    member(state) {\n      return state.member;\n    },\n    isLoggedIn(state) {\n      return state.isLoggedIn\n    },\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}